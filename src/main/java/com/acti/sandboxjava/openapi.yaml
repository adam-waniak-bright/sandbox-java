openapi: 3.0.3
info:
  title: Order Management API
  description: RESTful API for managing orders
  version: 1.0.0

servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: https://api-staging.example.com/v1
    description: Staging server

paths:
  /orders:
    post:
      summary: Create a new order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found or inactive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: List all orders
      operationId: listOrders
      parameters:
        - name: customerId
          in: query
          required: false
          schema:
            type: string
            pattern: '^CUST[A-Za-z0-9]{4,8}$'
        - name: status
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/OrderStatus'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /orders/{orderId}:
    get:
      summary: Get order details
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update order status
      operationId: updateOrderStatus
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid status transition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateOrderRequest:
      type: object
      required:
        - customerId
        - items
      properties:
        customerId:
          type: string
          pattern: '^CUST[A-Za-z0-9]{4,8}$'
        items:
          type: array
          minItems: 1
          maxItems: 20
          items:
            $ref: '#/components/schemas/CreateOrderItemRequest'

    CreateOrderItemRequest:
      type: object
      required:
        - productId
        - productName
        - quantity
        - unitPriceCents
      properties:
        productId:
          type: string
          pattern: '^PRD[0-9]{5}$'
        productName:
          type: string
        quantity:
          type: integer
          minimum: 1
        unitPriceCents:
          type: integer
          minimum: 0

    UpdateOrderStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/OrderStatus'

    OrderResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        customerId:
          type: string
          pattern: '^CUST[A-Za-z0-9]{4,8}$'
        status:
          $ref: '#/components/schemas/OrderStatus'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponse'
        subtotalCents:
          type: integer
        taxCents:
          type: integer
        shippingCents:
          type: integer
        totalCents:
          type: integer
        createdAt:
          type: string
          format: date-time
        confirmedAt:
          type: string
          format: date-time
          nullable: true
        shippedAt:
          type: string
          format: date-time
          nullable: true
        deliveredAt:
          type: string
          format: date-time
          nullable: true
        cancelledAt:
          type: string
          format: date-time
          nullable: true

    OrderItemResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          pattern: '^PRD[0-9]{5}$'
        productName:
          type: string
        quantity:
          type: integer
        unitPriceCents:
          type: integer

    OrderListResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
        pagination:
          $ref: '#/components/schemas/PaginationResponse'

    PaginationResponse:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        totalItems:
          type: integer
        totalPages:
          type: integer
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean

    OrderStatus:
      type: string
      enum:
        - DRAFT
        - CONFIRMED
        - SHIPPED
        - DELIVERED
        - CANCELLED

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true
        timestamp:
          type: string
          format: date-time
